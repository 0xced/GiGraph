<?xml version="1.0" encoding="utf-8"?>
<package>
  <metadata>
    <id>$id$</id>
    <version>$version$</version>
    <title>$title$</title>
    <tags>DOT Graphviz graph</tags>

    <authors>$author$</authors>
    <owners>$author$</owners>
    <copyright>$copyright$</copyright>
    
    <icon>content\icon.png</icon>
    
    <projectUrl>https://github.com/mariusz-schimke/GiGraph</projectUrl>
    <repository type="git" url="https://github.com/mariusz-schimke/GiGraph.git" branch="master" commit="1dda51dd4bd068cf536c69f7edab404bbf79cd91" />

    <license type="file">content\LICENSE.txt</license>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    
    <summary>Simple yet versatile library for generating graphs in the DOT language.</summary>
    
    <description>A simple solution for generating graphs in the DOT language. The output is a textual script that can be visualized and/or converted to an image with external tools. A handy one is a plugin for Visual Studio Code, named Graphviz Preview. There are also online tools like www.webgraphviz.com, where you can paste the script to view your graph.</description>
    
    <releaseNotes>- Added support for attributes:  (attribute specifications available at http://www.graphviz.org/doc/info/attrs.html).

- Refactoring (property and type naming improvements).

- Added a GetPropertyKeyMapping() method on attribute collections so it is possible to learn what properties specific DOT attributes are exposed as. The static DotAttributeValueAttribute.GetValueMapping() method on the other hand, may be used to get key-value mappings of enumerations.


See also https://github.com/mariusz-schimke/GiGraph/releases</releaseNotes>
  </metadata>
</package>